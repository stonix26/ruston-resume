/* Reset */
html {
  box-sizing: border-box;
  font-size: 16px;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
ol,
ul {
  margin: 0;
  padding: 0;
  font-weight: normal;
}

ol,
ul {
  list-style: none;
}

img {
  max-width: 100%;
  height: auto;
}
/* ---------------- */

// Variables
$main-color: #131217;
$btn-color: #663399;
$sidebar-color: #1b191f;

.layout-container {
  width: 100%;
  min-height: 100vh;
  display: grid;
  grid-template-columns: 17rem auto;
  grid-template-rows: auto;

  header {
    background: $sidebar-color;
    grid-column: 1 / 2;
    font-family: "Roboto Mono", monospace;

    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    text-align: center;

    .profile-container {
      padding: 1.5rem;

      .profile {
        border-radius: 50%;
        border: solid 0.5rem $btn-color;
      }
    }

    p {
      margin: 0.5rem 0;

      a {
        color: whitesmoke;
        text-decoration: none;

        &:hover {
          color: $btn-color;
          text-decoration: line-through;
        }
      }

      .active {
        color: $btn-color;
        text-decoration: line-through;
      }
    }
  }

  main {
    grid-column: 2 /3;
    padding: 1.5rem;
    background-color: $main-color;

    display: flex;
    flex-direction: column;
    justify-content: space-between;

    font-family: "Roboto Mono", monospace;

    .content-container {
      display: flex;
      flex-direction: column;
      justify-content: flex-start;

      h1 {
        font-size: 4.5rem;
        text-transform: uppercase;
      }

      h2 {
        font-family: "Roboto Mono", monospace;
        color: white;
        font-size: 2.5rem;
      }

      a {
        color: $btn-color;
        text-decoration: none;
        font-weight: 400;

        &:hover {
          text-decoration: underline;
        }
      }

      p {
        color: whitesmoke;
        font-family: "Roboto Mono", monospace;
        font-weight: 100;
        margin-bottom: 2rem;
      }

      .social-container {
        display: inline-block;

        a {
          margin-right: 1rem;

          .icons {
            color: white;
            font-size: 2rem;
            transition: all 0.2s ease;
          }

          .colored-icons {
            color: $btn-color;
            font-size: 2rem;
            transition: all 0.2s ease;
            transform: scale(1.1);
          }
        }
      }

      .exp-container {
        background-color: $sidebar-color;
        margin-top: 2rem;
        display: block;
        position: relative;
        padding: 0 2rem;

        &::before,
        &:last-child::before {
          content: "";
          display: block;
          position: absolute;
          height: calc(100% + 2rem);
          width: 2rem;
          top: 0.6rem;
          left: 0;
          z-index: 1;
        }

        &::before {
          border-top: solid 2px $btn-color;
          border-left: solid 2px $btn-color;
        }

        &:last-child::before {
          border-top: solid 2px $btn-color;
          border-left: none;
        }

        .duration {
          color: white;
          margin: unset;
          background-color: $btn-color;
          display: inline;
          padding: 2px 5px;
        }

        .position {
          font-size: 1.6rem;
          color: white;
          margin-top: 1.5rem;

          span {
            font-size: 1rem;
          }
        }

        .description {
          margin-top: 1rem;
        }
      }
    }

    footer {
      color: whitesmoke;
      font-family: "Roboto Mono", monospace;
      font-weight: 100;

      a {
        color: white;
        text-decoration: none;

        &:hover {
          color: $btn-color;
        }
      }
    }
  }
}

.glitch {
  color: white;
  font-weight: 700;
  position: relative;
  font-family: "Roboto Mono", monospace;
}

@keyframes noise-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      $top: random(100);
      $bottom: random(101 - $top);
      clip-path: inset(#{$top}% 0 #{$bottom}% 0);
    }
  }
}
.glitch::after {
  content: attr(data-text);
  position: absolute;
  left: 2px;
  text-shadow: -1px 0 red;
  top: 0;
  color: white;
  background: $main-color;
  overflow: hidden;
  animation: noise-anim 2s infinite linear alternate-reverse;
}

@keyframes noise-anim-2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      $top: random(100);
      $bottom: random(101 - $top);
      clip-path: inset(#{$top}% 0 #{$bottom}% 0);
    }
  }
}
.glitch::before {
  content: attr(data-text);
  position: absolute;
  left: -2px;
  text-shadow: 1px 0 blue;
  top: 0;
  color: white;
  background: $main-color;
  overflow: hidden;
  animation: noise-anim-2 15s infinite linear alternate-reverse;
}
